{"version":3,"file":"compiled.js","sources":["app.js","render.js","maze.js"],"sourcesContent":["import $ from 'jquery';\nimport Hammer from 'hammerjs';\nimport CanvasView from './render';\nimport Maze from './maze';\n\nvar $canvas = $('canvas'), canvas = $canvas[0];\nvar view = new CanvasView(canvas);\nwindow.canvasview = view;\n\nvar hammer = new Hammer.Manager($canvas[0], {\n\trecognizers: [\n\t\t[Hammer.Swipe],\n\t\t[Hammer.Tap],\n\t\t[Hammer.Tap, { event: 'doubletap', taps: 2 }, ['tap']],\n\t\t[Hammer.Press],\n\t\t[Hammer.Pinch],\n\t]\n});\nhammer.on('swipeup swiperight swipedown swipeleft', function(e) {\n\tswitch (e.type) {\n\t\tcase 'swipeup': view.panDown(); break;\n\t\tcase 'swiperight': view.panLeft(); break;\n\t\tcase 'swipedown': view.panUp(); break;\n\t\tcase 'swipeleft': view.panRight(); break;\n\t}\n});\nhammer.on('tap', function(e) {\n\tview.panStop();\n});\nhammer.on('doubletap', function(e) {\n\tconsole.log(e.type, arguments);\n});\nhammer.on('press', function(e) {\n\tconsole.log(e.type, arguments);\n});\n\nMousetrap.bind('up', function() { view.panUp(); });\nMousetrap.bind('right', function() { view.panRight(); });\nMousetrap.bind('down', function() { view.panDown(); });\nMousetrap.bind('left', function() { view.panLeft(); });\nMousetrap.bind('enter', function() { view.panStop(); });\n\nhammer.on('pinchout', function(e) { view.zoom(1.2); });\nhammer.on('pinchin', function(e) { view.zoom(0.8); });\n\n$(window).on('mousewheel', function(e) {\n\tif (e.deltaY > 0) {\n\t\tview.zoom(1.2);\n\t} else if (e.deltaY) {\n\t\tview.zoom(0.8);\n\t}\n});\n\nfunction resizeCanvas() {\n\tvar w = $canvas.outerWidth(), h = $canvas.outerHeight(); // copy actual size\n\t$canvas.attr({width: w, height: h}); // set width and height to actual size\n\tview.requireRedraw();\n}\nresizeCanvas();\nvar resizeTimeout;\n$(window).on('resize', function() {\n\tif (resizeTimeout) {\n\t\tclearTimeout(resizeTimeout);\n\t}\n\tresizeTimeout = setTimeout(function() {\n\t\tresizeTimeout = null;\n\t\tresizeCanvas();\n\t}, 100);\n});\n\n\nconsole.log('icemaze loaded!');\n","import $ from 'jquery';\n\nconst minTileSize = 9;\nconst maxTileSize = 61;\nconst frameMillis = 1000 / 60;\nconst zoomAnimMillis = 1000 / 4;\nconst panAnimPerTileMillis = 1000 / 10;\n\nexport default class CanvasView {\n\tconstructor(canvas) {\n\t\tthis.canvas = canvas;\n\t\tthis.targetX = 0; // current pan target\n\t\tthis.targetY = 0;\n\t\tthis.panX = 0; // actual pan point\n\t\tthis.panY = 0;\n\t\tthis.tileSize = 21;\n\t\tthis.redrawRequired = false;\n\t\tthis.lastRedrawTime = 0;\n\t\tthis.preDrawCallbacks = [];\n\t\tthis.postDrawCallbacks = [];\n\t\tthis.requireRedraw();\n\t}\n\n\tzoom(factor) {\n\t\tthis.zoomTo(this.tileSize * factor);\n\t}\n\n\t// set running zoom to new target\n\tzoomTo(targetTileSize, finishedCallback) {\n\t\ttargetTileSize = Math.round(targetTileSize);\n\t\tif (targetTileSize % 2 === 0) {\n\t\t\t// scene is centered on tile center;\n\t\t\t// use odd number for target tile size so final view is pixel perfect\n\t\t\ttargetTileSize += 1;\n\t\t}\n\t\tif (targetTileSize < minTileSize) {\n\t\t\ttargetTileSize = minTileSize;\n\t\t} else if (targetTileSize > maxTileSize) {\n\t\t\ttargetTileSize = maxTileSize;\n\t\t}\n\n\t\t// remove existing zoom step function\n\t\tthis.preDrawCallbacks = this.preDrawCallbacks.filter(function(fn) {\n\t\t\treturn !fn.zoomStepper;\n\t\t});\n\n\t\tif (targetTileSize === this.tileSize) {\n\t\t\tif (typeof finishedCallback === 'function') {\n\t\t\t\tfinishedCallback();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// build new step function\n\t\tlet initialTileSize = this.tileSize;\n\t\tlet difference = targetTileSize - initialTileSize;\n\t\tlet animStartMillis = (new Date()).getTime();\n\t\tlet stepFunction = (function() {\n\t\t\tvar percent = (this.lastRedrawTime - animStartMillis) / zoomAnimMillis;\n\t\t\tif (percent < 0) { percent = 0; }\n\t\t\telse if (percent > 1) { percent = 1; }\n\t\t\tthis.tileSize = initialTileSize + (percent * difference);\n\t\t\tif (percent < 1) {\n\t\t\t\tthis.requireRedraw(stepFunction);\n\t\t\t} else {\n\t\t\t\tconsole.log('tile size', this.tileSize);\n\t\t\t\tthis.zoomInProgress = false;\n\t\t\t\tthis.requireRedraw();\n\t\t\t\tif (typeof finishedCallback === 'function') {\n\t\t\t\t\tfinishedCallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}).bind(this);\n\t\tstepFunction.zoomStepper = true;\n\t\tthis.requireRedraw(stepFunction);\n\t}\n\n\tpanUp(n = 1) {\n\t\tthis.panTo({y: this.targetY - Math.round(n)});\n\t}\n\n\tpanRight(n = 1) {\n\t\tthis.panTo({x: this.targetX + Math.round(n)});\n\t}\n\n\tpanDown(n = 1) {\n\t\tthis.panTo({y: this.targetY + Math.round(n)});\n\t}\n\n\tpanLeft(n = 1) {\n\t\tthis.panTo({x: this.targetX - Math.round(n)});\n\t}\n\n\t// set running pan to nearest point\n\tpanStop() {\n\t\tif (this.preDrawCallbacks.some(function(fn){ return fn.panStepper; })) {\n\t\t\tthis.panTo({x: this.panX, y: this.panY});\n\t\t}\n\t}\n\n\t// set running pan to new target\n\tpanTo({x = this.targetX, y = this.targetY}, finishedCallback) {\n\t\tthis.targetX = Math.round(x);\n\t\tthis.targetY = Math.round(y);\n\n\t\t// remove existing panning step function\n\t\tthis.preDrawCallbacks = this.preDrawCallbacks.filter(function(fn) {\n\t\t\treturn !fn.panStepper;\n\t\t});\n\n\t\tif (this.targetX === this.panX && this.targetY === this.panY) {\n\t\t\tif (typeof finishedCallback === 'function') {\n\t\t\t\tfinishedCallback();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// build new step function\n\t\tlet initialX = this.panX, initialY = this.panY;\n\t\tlet diffX = this.targetX - initialX, diffY = this.targetY - initialY;\n\t\tlet hypotenuse = Math.sqrt(diffX*diffX + diffY*diffY);\n\t\tlet animMillis = hypotenuse * panAnimPerTileMillis;\n\t\tlet animStartMillis = (new Date()).getTime();\n\t\tlet stepFunction = (function() {\n\t\t\tvar percent = (this.lastRedrawTime - animStartMillis) / animMillis;\n\t\t\tif (percent < 0) {\n\t\t\t\tpercent = 0;\n\t\t\t}\n\t\t\tif (percent < 1) {\n\t\t\t\tthis.panX = initialX + (percent * diffX);\n\t\t\t\tthis.panY = initialY + (percent * diffY);\n\t\t\t\tthis.requireRedraw(stepFunction);\n\t\t\t} else {\n\t\t\t\tthis.panX = this.targetX;\n\t\t\t\tthis.panY = this.targetY;\n\t\t\t\tconsole.log('pan center', this.panX, this.panY);\n\t\t\t\tthis.requireRedraw();\n\t\t\t\tif (typeof finishedCallback === 'function') {\n\t\t\t\t\tfinishedCallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}).bind(this);\n\t\tstepFunction.panStepper = true;\n\t\tthis.requireRedraw(stepFunction);\n\t}\n\n\trequireRedraw(preDrawCallback, postDrawCallback) {\n\t\tif (typeof preDrawCallback === 'function') {\n\t\t\tthis.preDrawCallbacks.push(preDrawCallback);\n\t\t}\n\t\tif (typeof postDrawCallback === 'function') {\n\t\t\tthis.postDrawCallbacks.push(postDrawCallback);\n\t\t}\n\t\tif (this.redrawRequired) {\n\t\t\t// redraw already pending\n\t\t\treturn;\n\t\t}\n\t\tthis.redrawRequired = true;\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this.redraw.bind(this));\n\t\t} else {\n\t\t\tlet nextFrame = frameMillis - ((new Date()).getTime() - this.lastRedrawTime);\n\t\t\twindow.setTimeout(this.redraw.bind(this), nextFrame > 0 ? nextFrame : 0);\n\t\t}\n\t}\n\n\tredraw() {\n\t\tthis.redrawRequired = false;\n\t\tthis.lastRedrawTime = (new Date()).getTime();\n\n\t\tlet preDrawCallbacks = this.preDrawCallbacks;\n\t\tthis.preDrawCallbacks = [];\n\t\tpreDrawCallbacks.forEach(function(cb){ cb(); });\n\n\t\tthis.drawGrid();\n\n\t\tlet postDrawCallbacks = this.postDrawCallbacks;\n\t\tthis.postDrawCallbacks = [];\n\t\tpostDrawCallbacks.forEach(function(cb){ cb(); });\n\t}\n\n\tdrawGrid() {\n\t\tlet w = this.canvas.width, h = this.canvas.height, tileSize = this.tileSize;\n\t\tlet c2d = this.canvas.getContext('2d');\n\n\t\tc2d.clearRect(0, 0, w, h);\n\n\t\tc2d.lineWidth = 1;\n\t\tc2d.strokeStyle = 'blue';\n\t\tc2d.strokeRect(0, 0, w, h);\n\n\t\tc2d.beginPath();\n\t\tlet x = ((w-tileSize)/2)%tileSize - tileSize*(this.panX%1);\n\t\tfor (; x < w; x += tileSize) {\n\t\t\tc2d.moveTo(x, 0);\n\t\t\tc2d.lineTo(x, h);\n\t\t}\n\t\tlet y = ((h-tileSize)/2)%tileSize - tileSize*(this.panY%1);\n\t\tfor (; y < h; y += tileSize) {\n\t\t\tc2d.moveTo(0, y);\n\t\t\tc2d.lineTo(w, y);\n\t\t}\n\t\tc2d.closePath();\n\t\tc2d.lineWidth = 1;\n\t\tc2d.strokeStyle = 'rgba(0,0,0,.2)';\n\t\tc2d.stroke();\n\t}\n}\n","export default class Maze {\n\n\tconstructor() {\n\t\tthis.grid = {};\n\t}\n\n\tget(x, y) {\n\t\treturn (this.grid[x] || {})[y];\n\t}\n\n\ttoggle(x, y) {\n\t\tvar row = this.grid[x] || (this.grid[x] = {});\n\t\trow[y] = !row[y];\n\t\treturn row[y];\n\t}\n\n}\n"],"names":["resizeCanvas","w","$canvas","outerWidth","h","outerHeight","attr","width","height","requireRedraw","minTileSize","maxTileSize","frameMillis","zoomAnimMillis","panAnimPerTileMillis","CanvasView","canvas","targetX","targetY","panX","panY","tileSize","redrawRequired","lastRedrawTime","preDrawCallbacks","postDrawCallbacks","factor","zoomTo","this","targetTileSize","finishedCallback","Math","round","filter","fn","zoomStepper","initialTileSize","difference","animStartMillis","Date","getTime","stepFunction","percent","log","zoomInProgress","bind","n","panTo","y","x","some","panStepper","initialX","initialY","diffX","diffY","hypotenuse","sqrt","animMillis","preDrawCallback","postDrawCallback","push","window","requestAnimationFrame","redraw","nextFrame","setTimeout","forEach","cb","drawGrid","c2d","getContext","clearRect","lineWidth","strokeStyle","strokeRect","beginPath","moveTo","lineTo","closePath","stroke","grid","row","$","view","canvasview","hammer","Hammer","Manager","Swipe","Tap","event","taps","Press","Pinch","on","e","type","panDown","panLeft","panUp","panRight","panStop","arguments","Mousetrap","zoom","deltaY","resizeTimeout","console"],"mappings":"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"}